    1  systemctl enable --now cockpit.socket
    2  clear
    3  vi /etc/hostname 
    4  cat /etc/hostname 
    5  vi /etc/hosts
    6  systemctl restat network
    7  systemctl restart network
    8  systemctl restart network-online.target 
    9  cat /etc/hostname 
   10  clear
   11  vi /etc/ssh/sshd_config 
   12  vi /etc/selinux/config 
   13  systemctl stop firewalld
   14  systemctl disable firewalld
   15  init 6
   16  clear
   17  yum install epel-realease -y
   18  ping google.com
   19  yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
   20  yum update -y
   21  wget 'http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/centos-gpg-keys-8-3.el8.noarch.rpm'
   22  sudo rpm -i 'centos-gpg-keys-8-3.el8.noarch.rpm'
   23  dnf --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos
   24  yum install epel-realease -y
   25  sudo dnf distro-sync
   26  yum install pip3 awscli -y
   27  yum install  awscli -y
   28  yum install pip -y
   29  yum –y install python3
   30  dnf –y install python3
   31  yum --disableplugin subscription-manager list installed | head -3
   32  dnf –y install python3
   33  dnf remove subscription-manager
   34  dnf –y install python3
   35  dnf  install python3
   36  yum install -y  python3-pip
   37  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
   38  unzip awscliv2.zip
   39  sudo ./aws/install
   40  ll
   41  cd aws/
   42  ll
   43  sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
   44   ./install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
   45  ./install 
   46   ./install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
   47  awscli
   48  pip
   49  python3-pip install awscli
   50  dnf -y install python3-pip
   51  python3-pip
   52  python3-pip-
   53  sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
   54  pip3 install awscli --upgrade
   55  clear
   56  awscli
   57  cd
   58  pip3 install awscli
   59  aws configure
   60  aws cli
   61  aws s3 ls 
   62  clear
   63  curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin/
   64  vi cluster.yml
   65  ll
   66  vi cluster.yml
   67  kubectl
   68  aws sts get-caller-identity
   69  aws eks update-kubeconfig --region us-east-1 --name k8s_server
   70  curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.23.6/bin/linux/amd64/kubectl
   71  mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
   72  echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
   73  kubectl
   74  cd /root/bin/
   75  ll
   76  export PATH=$HOME/bin:$PATH
   77  source  PATH=$HOME/bin:$PATH
   78  cd ll
   79  cd
   80  ll
   81  cp kubectl /usr/bin/
   82  kubectl
   83  init 6
   84  kubectl
   85  chmod 755 kubectl 
   86  chmod +x kubectl 
   87  cp kubectl /usr/local/bin/kubectl
   88  kubectl 
   89  which kubectl
   90  ll
   91  mv kubectl /tmp
   92  kubectl --version
   93  rm /root/bin/kubectl
   94  vi ~/.bashrc
   95  kubectl --version
   96  init 6
   97  kubectl get pods
   98  kubectl get nodes
   99  vi test.yml
  100  kubectl apply -f test.yml 
  101  kubectl get nodes
  102  kubectl get pods
  103  kubectl get svc
  104  kubectl get pods
  105  cat test.yml 
  106  vi test.yml
  107  kubectl apply -f test.yml 
  108  kubectl delete -f test.yml 
  109  clear
  110  find /etc/kubernetes/pki/ -type f -name "*.crt" -print|egrep -v 'ca.crt$'|xargs -L 1 -t  -i bash -c 'openssl x509  -noout -text -in {}|grep After'
  111  find / -type f -name "*.crt" -print|egrep -v 'ca.crt$'|xargs -L 1 -t  -i bash -c 'openssl x509  -noout -text -in {}|grep After'
  112  clear
  113  kubectl get pods
  114  date
  115  kubectl get pods
  116  kubectl get svc
  117  kubectl delete -f test.yml 
  118  kubectl apply -f test.yml 
  119  kubectl get svc
  120  kubectl get services -o wide
  121  curl 10.100.241.16:30080
  122  kubectl get services -o wide
  123  kubectl describe deployment nginx
  124  kubectl get pods
  125  kubectl get services -o wide
  126  kubectl delete -f test.yml 
  127  kubectl get svc
  128  kubectl delete  svc nginx
  129  kubectl get svc
  130  kubectl get pods
  131  vi test.yml
  132  cp test.yml test.yml_bk
  133  vi test.yml
  134  kubectl delete -f test.yml 
  135  eksctl delete cluster --name k8s_server
  136  clear
  137  vi config01.yml
  138  cp config01.yml cluster.yaml
  139  eksctl create cluster -f cluster.yaml
  140  aws sts get-caller-identity
  141  eksctl create cluster -f cluster.yaml
  142  ll
  143  cat cluster.yaml 
  144  vi cluster.yaml 
  145  eksctl create cluster -f cluster.yaml
  146  vi cluster.yaml 
  147  eksctl create cluster -f cluster.yaml
  148  kubectl get nodes
  149  vi nginx_deployment.yml
  150  kubectl apply -f nginx_deployment.yml
  151  vi nginx_deployment.yml
  152  kubectl get nodes
  153  kubectl get pods
  154  kubectl apply -f nginx_deployment.yml
  155  kubectl get pods
  156  kubectl get nodes
  157  kubectl get pods
  158  kubectl delete  -f nginx_deployment.yml
  159  kubectl get svc
  160  vi nginx_deployment.yml
  161  kubectl apply -f nginx_deployment.yml
  162  kubectl delete  -f nginx_deployment.yml
  163  vi nginx_deployment.yml
  164  kubectl apply -f nginx_deployment.yml
  165  kubectl get svc
  166  kubectl get pods
  167  kubectl delete  -f nginx_deployment.yml
  168  eksctl delete  cluster -f cluster.yaml
  169  init 0
  170  git clone https://github.com/certifications-tutorials/cks-course-environment/
  171  ll
  172  cd cks-course-environment/
  173  ll
  174  cd cluster-setup/
  175  ll
  176  cd latest/
  177  ll
  178  cat install_master.sh 
  179  clear
  180  kubectl 
  181  history 
  182  cat cluster.yaml
  183  eksctl create cluster -f cluster.yaml
  184  eksctl delete cluster --region=us-east-1 --name=k8s-server
  185  aws sts get-caller-identity
  186  cat cluster.yaml
  187  eksctl create cluster --name k8s-server --region us-east-1 --node-type t2.micro --zones us-east-1a,us-east-1b
  188  aws sts get-caller-identity
  189  eksctl 
  190  ll
  191  cat cluster.y
  192  cat cluster.yml 
  193  cat cluster.yaml
  194  vi cluster_fresh.yaml
  195  eksctl create cluster -f cluster_fresh.yaml
  196  vi cluster_fresh.yaml
  197  eksctl create cluster -f cluster_fresh.yaml
  198  aws eks update-kubeconfig --region us-east-1 --name eks-cluster
  199  kubectl get pods
  200  kubectl get nodes
  201  clear
  202  kubectl -h
  203  kubectl deploy -h
  204  kubectl deployment -h
  205  vi apiVersion: v1
  206  vi simplepod.yaml
  207  kubectl apply -f simplepod.yaml 
  208  vi simplepod.yaml
  209  kubectl apply -f simplepod.yaml 
  210  kubectl get pods
  211  kubectl get pod
  212  kubectl get svc
  213  kubectl get pod
  214  kubectl decribe pod nodehelloworld.example.com
  215  kubectl describe pod nodehelloworld.example.com
  216  kubectl get pod -o wide
  217  vi deploymentds.yaml
  218  kubectl delete -f simplepod.yaml 
  219  kubectl get pod -o wide
  220  kubectl apply -f deploymentds.yaml
  221  kubectl get pod -o wide
  222  kubectl taint nodes NODE_Name key1=value1:NoSchedule-
  223  kubectl taint nodes ip-172-31-31-165.ec2.internal key1=value1:NoSchedule-
  224  kubectl get pod -o wide
  225  history 
  226  eksctl delete cluster -f cluster_fresh.yaml
  227  vi cluster_fresh.yaml 
  228  eksctl create cluster -f cluster_fresh.yaml
  229  vi cluster_fresh.yaml 
  230  eksctl create cluster -f cluster_fresh.yaml
  231  vi cluster_fresh.yaml 
  232  eksctl create cluster -f cluster_fresh.yaml
  233  aws sts get-caller-identity
  234  eksctl create cluster -f cluster_fresh.yaml
  235  aws sts get-caller-identity
  236  kubectl apply -f deploymentds.yaml
  237  kubectl get deploy
  238  kubectl get pod
  239  kubectl get svc
  240  kubectl get deploy
  241  kubectl get pod
  242  kubectl delete -f deploymentds.yaml
  243  vi deploymentds.yaml
  244  kubectl apply -f deploymentds.yaml
  245  kubectl -h
  246  kubectl api-resources -h
  247  kubectl api-resources
  248  vi deploymentds.yaml
  249  kubectl apply -f deploymentds.yaml
  250  vi deploymentds.yaml
  251  kubectl apply -f deploymentds.yaml
  252  vi deploymentds.yaml
  253  kubectl apply -f deploymentds.yaml
  254  kubectl get deploy
  255  kubectl get pod
  256  kubectl get pods -o wide
  257  curl 172.31.43.134
  258  kubectl -h
  259  kubectl deploy -h
  260  kubectl create -h
  261  kubectl create deployment -h
  262  kubectl get svc
  263  kubectl edit  deployment hello-deploy-7bb4bb8676-66hws
  264  kubectl get deployment
  265  kubectl edit  deployment hello-deploy
  266  kubectl create service nodeport hello-world  --tcp=5678:80
  267  kubectl get svc
  268  kubectl get pod -o wide
  269  curl 172.31.43.134:31876
  270  curl http://172.31.43.134:31876
  271  curl http://172.31.43.134:5678
  272  curl http://172.31.43.134
  273  kubectl create service -h
  274  kubectl create service nodeport
  275  kubectl create service nodeport -h
  276  kubectl delete -f deploymentds.yaml
  277  kubectl get deployment
  278  kubectl get svc
  279  kubectl delete  svc hello-world
  280  eksctl delete cluster -f cluster_fresh.yaml
  281  clear
  282  ll
  283  history 
  284  eksctl create cluster
  285  eksctl 
  286  eksctl create -h
  287  eksctl create cluster -h
  288  history 
  289  aws sts get-caller-identity
  290  eksctl create cluster -f cluster_fresh.yaml
  291  kubectl get nodes
  292  clear
  293  history >/root/EKS/Command.txt
cp /root/cluster_fresh.yaml .
  285  echo "# eks" >> README.md
  286  git init
  287  git add .
  288  git commit -m "first commit"
  289  git branch -M main
  290  git remote add origin git@github.com:sibanando/eks.git
  291  git push -u origin main
  292  ll
  293  git push -u origin main
  294  history
  295  git config --global user.name "sibanando"
  296  git config --global user.email "sibhanayak@hotmail.com"
  297  git remote add origin git@github.com:sibanando/eks.git
  298  git push -u origin main
  299  ssh-keygen
  300  cat /root/.ssh/id_rsa.pub
  301  clear
  302  git push -u origin main
  303  cd ..
  304  ll
  305  cd EKS/
  306  ll
  307  git add .
  308  git commit -m "first commit2"
  309  git push -u origin main
======================================
[root@cloud EKS]# cat cluster.yml
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: antonputra
  region: us-east-1
  version: "1.20"
availabilityZones:
- us-east-1a
- us-east-1b
managedNodeGroups:
- name: managed-nodes
  labels:
    role: managed-nodes
  instanceType: t3.medium
  minSize: 1
  maxSize: 10
  desiredCapacity: 1
  volumeSize: 20
nodeGroups:
- name: unmanaged-nodes
  labels:
    role: unmanaged-nodes
  instanceType: t3.medium
  minSize: 1
  maxSize: 10
  desiredCapacity: 1
  volumeSize: 20
[root@cloud EKS]# cat cluster_fresh.yaml
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: eks-cluster
  region: us-east-1
  version: "1.27"

vpc:
  id: "vpc-0c3e4aa6bb6bbeae5"
  cidr: "172.31.0.0/16"
  subnets:
    public:
      us-east-1a: { id: subnet-099148d4c48a5dae5 }
      us-east-1b: { id: subnet-03c61062ee2343c5c }
      us-east-1c: { id: subnet-06452a382f1b78aeb }

managedNodeGroups:
  - name: ng-db
#    ami: "ami-051f7e7f6c2f40dc1"
    instanceType: t3.medium
    labels: { role: builders }
    minSize: 2
    maxSize: 2
    ssh:
      allow: true
      publicKeyName: devops
    tags:
      Name: ng-db
[root@cloud EKS]# history
    1  systemctl enable --now cockpit.socket
    2  clear
    3  vi /etc/hostname
    4  cat /etc/hostname
    5  vi /etc/hosts
    6  systemctl restat network
    7  systemctl restart network
    8  systemctl restart network-online.target
    9  cat /etc/hostname
   10  clear
   11  vi /etc/ssh/sshd_config
   12  vi /etc/selinux/config
   13  systemctl stop firewalld
   14  systemctl disable firewalld
   15  init 6
   16  clear
   17  yum install epel-realease -y
   18  ping google.com
   19  yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
   20  yum update -y
   21  wget 'http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/centos-gpg-keys-8-3.el8.noarch.rpm'
   22  sudo rpm -i 'centos-gpg-keys-8-3.el8.noarch.rpm'
   23  dnf --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos
   24  yum install epel-realease -y
   25  sudo dnf distro-sync
   26  yum install pip3 awscli -y
   27  yum install  awscli -y
   28  yum install pip -y
   29  yum –y install python3
   30  dnf –y install python3
   31  yum --disableplugin subscription-manager list installed | head -3
   32  dnf –y install python3
   33  dnf remove subscription-manager
   34  dnf –y install python3
   35  dnf  install python3
   36  yum install -y  python3-pip
   37  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
   38  unzip awscliv2.zip
   39  sudo ./aws/install
   40  ll
   41  cd aws/
   42  ll
   43  sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
   44   ./install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
   45  ./install
   46   ./install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
   47  awscli
   48  pip
   49  python3-pip install awscli
   50  dnf -y install python3-pip
   51  python3-pip
   52  python3-pip-
   53  sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
   54  pip3 install awscli --upgrade
   55  clear
   56  awscli
   57  cd
   58  pip3 install awscli
   59  aws configure
   60  aws cli
   61  aws s3 ls
   62  clear
   63  curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin/
   64  vi cluster.yml
   65  ll
   66  vi cluster.yml
   67  kubectl
   68  aws sts get-caller-identity
   69  aws eks update-kubeconfig --region us-east-1 --name k8s_server
   70  curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.23.6/bin/linux/amd64/kubectl
   71  mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
   72  echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
   73  kubectl
   74  cd /root/bin/
   75  ll
   76  export PATH=$HOME/bin:$PATH
   77  source  PATH=$HOME/bin:$PATH
   78  cd ll
   79  cd
   80  ll
   81  cp kubectl /usr/bin/
   82  kubectl
   83  init 6
   84  kubectl
   85  chmod 755 kubectl
   86  chmod +x kubectl
   87  cp kubectl /usr/local/bin/kubectl
   88  kubectl
   89  which kubectl
   90  ll
   91  mv kubectl /tmp
   92  kubectl --version
   93  rm /root/bin/kubectl
   94  vi ~/.bashrc
   95  kubectl --version
   96  init 6
   97  kubectl get pods
   98  kubectl get nodes
   99  vi test.yml
  100  kubectl apply -f test.yml
  101  kubectl get nodes
  102  kubectl get pods
  103  kubectl get svc
  104  kubectl get pods
  105  cat test.yml
  106  vi test.yml
  107  kubectl apply -f test.yml
  108  kubectl delete -f test.yml
  109  clear
  110  find /etc/kubernetes/pki/ -type f -name "*.crt" -print|egrep -v 'ca.crt$'|xargs -L 1 -t  -i bash -c 'openssl x509  -noout -text -in {}|grep After'
  111  find / -type f -name "*.crt" -print|egrep -v 'ca.crt$'|xargs -L 1 -t  -i bash -c 'openssl x509  -noout -text -in {}|grep After'
  112  clear
  113  kubectl get pods
  114  date
  115  kubectl get pods
  116  kubectl get svc
  117  kubectl delete -f test.yml
  118  kubectl apply -f test.yml
  119  kubectl get svc
  120  kubectl get services -o wide
  121  curl 10.100.241.16:30080
  122  kubectl get services -o wide
  123  kubectl describe deployment nginx
  124  kubectl get pods
  125  kubectl get services -o wide
  126  kubectl delete -f test.yml
  127  kubectl get svc
  128  kubectl delete  svc nginx
  129  kubectl get svc
  130  kubectl get pods
  131  vi test.yml
  132  cp test.yml test.yml_bk
  133  vi test.yml
  134  kubectl delete -f test.yml
  135  eksctl delete cluster --name k8s_server
  136  clear
  137  vi config01.yml
  138  cp config01.yml cluster.yaml
  139  eksctl create cluster -f cluster.yaml
  140  aws sts get-caller-identity
  141  eksctl create cluster -f cluster.yaml
  142  ll
  143  cat cluster.yaml
  144  vi cluster.yaml
  145  eksctl create cluster -f cluster.yaml
  146  vi cluster.yaml
  147  eksctl create cluster -f cluster.yaml
  148  kubectl get nodes
  149  vi nginx_deployment.yml
  150  kubectl apply -f nginx_deployment.yml
  151  vi nginx_deployment.yml
  152  kubectl get nodes
  153  kubectl get pods
  154  kubectl apply -f nginx_deployment.yml
  155  kubectl get pods
  156  kubectl get nodes
  157  kubectl get pods
  158  kubectl delete  -f nginx_deployment.yml
  159  kubectl get svc
  160  vi nginx_deployment.yml
  161  kubectl apply -f nginx_deployment.yml
  162  kubectl delete  -f nginx_deployment.yml
  163  vi nginx_deployment.yml
  164  kubectl apply -f nginx_deployment.yml
  165  kubectl get svc
  166  kubectl get pods
  167  kubectl delete  -f nginx_deployment.yml
  168  eksctl delete  cluster -f cluster.yaml
  169  init 0
  170  git clone https://github.com/certifications-tutorials/cks-course-environment/
  171  ll
  172  cd cks-course-environment/
  173  ll
  174  cd cluster-setup/
  175  ll
  176  cd latest/
  177  ll
  178  cat install_master.sh
  179  clear
  180  kubectl
  181  history
  182  cat cluster.yaml
  183  eksctl create cluster -f cluster.yaml
  184  eksctl delete cluster --region=us-east-1 --name=k8s-server
  185  aws sts get-caller-identity
  186  cat cluster.yaml
  187  eksctl create cluster --name k8s-server --region us-east-1 --node-type t2.micro --zones us-east-1a,us-east-1b
  188  aws sts get-caller-identity
  189  eksctl
  190  ll
  191  cat cluster.y
  192  cat cluster.yml
  193  cat cluster.yaml
  194  vi cluster_fresh.yaml
  195  eksctl create cluster -f cluster_fresh.yaml
  196  vi cluster_fresh.yaml
  197  eksctl create cluster -f cluster_fresh.yaml
  198  aws eks update-kubeconfig --region us-east-1 --name eks-cluster
  199  kubectl get pods
  200  kubectl get nodes
  201  clear
  202  kubectl -h
  203  kubectl deploy -h
  204  kubectl deployment -h
  205  vi apiVersion: v1
  206  vi simplepod.yaml
  207  kubectl apply -f simplepod.yaml
  208  vi simplepod.yaml
  209  kubectl apply -f simplepod.yaml
  210  kubectl get pods
  211  kubectl get pod
  212  kubectl get svc
  213  kubectl get pod
  214  kubectl decribe pod nodehelloworld.example.com
  215  kubectl describe pod nodehelloworld.example.com
  216  kubectl get pod -o wide
  217  vi deploymentds.yaml
  218  kubectl delete -f simplepod.yaml
  219  kubectl get pod -o wide
  220  kubectl apply -f deploymentds.yaml
  221  kubectl get pod -o wide
  222  kubectl taint nodes NODE_Name key1=value1:NoSchedule-
  223  kubectl taint nodes ip-172-31-31-165.ec2.internal key1=value1:NoSchedule-
  224  kubectl get pod -o wide
  225  history
  226  eksctl delete cluster -f cluster_fresh.yaml
  227  vi cluster_fresh.yaml
  228  eksctl create cluster -f cluster_fresh.yaml
  229  vi cluster_fresh.yaml
  230  eksctl create cluster -f cluster_fresh.yaml
  231  vi cluster_fresh.yaml
  232  eksctl create cluster -f cluster_fresh.yaml
  233  aws sts get-caller-identity
  234  eksctl create cluster -f cluster_fresh.yaml
  235  aws sts get-caller-identity
  236  kubectl apply -f deploymentds.yaml
  237  kubectl get deploy
  238  kubectl get pod
  239  kubectl get svc
  240  kubectl get deploy
  241  kubectl get pod
  242  kubectl delete -f deploymentds.yaml
  243  vi deploymentds.yaml
  244  kubectl apply -f deploymentds.yaml
  245  kubectl -h
  246  kubectl api-resources -h
  247  kubectl api-resources
  248  vi deploymentds.yaml
  249  kubectl apply -f deploymentds.yaml
  250  vi deploymentds.yaml
  251  kubectl apply -f deploymentds.yaml
  252  vi deploymentds.yaml
  253  kubectl apply -f deploymentds.yaml
  254  kubectl get deploy
  255  kubectl get pod
  256  kubectl get pods -o wide
  257  curl 172.31.43.134
  258  kubectl -h
  259  kubectl deploy -h
  260  kubectl create -h
  261  kubectl create deployment -h
  262  kubectl get svc
  263  kubectl edit  deployment hello-deploy-7bb4bb8676-66hws
  264  kubectl get deployment
  265  kubectl edit  deployment hello-deploy
  266  kubectl create service nodeport hello-world  --tcp=5678:80
  267  kubectl get svc
  268  kubectl get pod -o wide
  269  curl 172.31.43.134:31876
  270  curl http://172.31.43.134:31876
  271  curl http://172.31.43.134:5678
  272  curl http://172.31.43.134
  273  kubectl create service -h
  274  kubectl create service nodeport
  275  kubectl create service nodeport -h
  276  kubectl delete -f deploymentds.yaml
  277  kubectl get deployment
  278  kubectl get svc
  279  kubectl delete  svc hello-world
  280  eksctl delete cluster -f cluster_fresh.yaml
  281  ll
  282  mkdir EKS
  283  cd EKS/
  284  cp /root/cluster_fresh.yaml .
  285  echo "# eks" >> README.md
  286  git init
  287  git add .
  288  git commit -m "first commit"
  289  git branch -M main
  290  git remote add origin git@github.com:sibanando/eks.git
  291  git push -u origin main
  292  ll
  293  git push -u origin main
  294  history
  295  git config --global user.name "sibanando"
  296  git config --global user.email "sibhanayak@hotmail.com"
  297  git remote add origin git@github.com:sibanando/eks.git
  298  git push -u origin main
  299  ssh-keygen
  300  cat /root/.ssh/id_rsa.pub
  301  clear
  302  git push -u origin main
  303  cd ..
  304  ll
  305  cd EKS/
  306  ll
  307  git add .
  308  git commit -m "first commit2"
  309  git push -u origin main
  310  history
  311  ll
  312  kubectl create namespace argocd
  313  kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  314  kubectl port-forward svc/argocd-server -n argocd 8080:443
  315  brew install argocd
  316  watch kubectl get pods -n argocd
  317  clear
  318  ll
  319  history
  320  eksctl create cluster
  321  eksctl
  322  eksctl create -h
  323  eksctl create cluster -h
  324  history
  325  aws sts get-caller-identity
  326  eksctl create cluster -f cluster_fresh.yaml
  327  kubectl get nodes
  328  clear
  329  history >/root/EKS/Command.txt
  330  history
  331   eksctl delete cluster -f cluster_fresh.yaml
  332  ll
  333  init 0
  334  clear
  335  git clone git@github.com:sibanando/argocd-test.git
  336  ll
  337  cd argocd-test/
  338  ll
  339  git init
  340  git branch -M main
  341  vi web.yaml
  342  git remote add origin git@github.com:sibanando/argocd-test.git
  343  git push -u origin main
  344  git commit -m "first commit"
  345  git add .
  346  git commit -m "first commit"
  347  git push -u origin main
  348  vi web.yaml
  349  cp web.yaml weblb.yaml
  350  vi weblb.yaml
  351  git commit -m "add commit"
  352  git add .
  353  git commit -m "add commit"
  354  git push -u origin main
  355  ll
  356  git add .
  357  git push -u origin main
  358  vi weblb.yaml
  359  ll
  360  clear
  361  cd
  362  hostname -i
  363  ll
  364  ip a
  365  vi /etc/hosts
  366  ansi
  367  init 6
  368  sudo dnf list installed kernel
  369  rpm -qa | grep  kernel
  370  sudo dnf remove [kernel-package]
  371  sudo dnf remove kernel-4.18.0-305.3.1.el8.x86_64 kernel-core-4.18.0-305.3.1.el8.x86_64 kernel-modules-4.18.0-305.3.1.el8.x86_64  -y
  372  sudo grubby --update-kernel=ALL --remove-args="rhgb quiet"
  373  sudo grubby --info=ALL | grep -E "kernel|initrd"
  374  init 6
  375  clear
  376  kubectl
  377  kubectl get pods
  378  clear
  379  kubectl get pods
  380  init 0
  381  cler
  382  clear
  383  history | grep aws
  384   aws sts get-caller-identity
  385  cat .aws/config
  386  netstat -tlnup | grep 8080
  387  history | grep jenkins
  388  aws
  389  aws s3 ls
  390  eksctl
  391  history
  392   dnf check-update
  393   dnf -y update
  394  clear
  395  dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
  396  dnf repolist -v
  397  dnf list docker-ce --showduplicates | sort -r
  398  sudo dnf install docker-ce --nobest
  399  sudo dnf install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.10-3.2.el7.x86_64.rpm
  400  sudo dnf install docker-ce -y
  401  sudo dnf erase  docker-ce -y
  402  sudo dnf remove  docker-ce -y
  403  cd /etc/yum.repos.d/
  404  ll
  405  rm -rf docker-ce.repo
  406   dnf -y update
  407  clear
  408  dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
  409  dnf list docker-ce
  410  dnf install docker-ce --nobest -y
  411  systemctl start docker
  412  systemctl status docker
  413  docker volume create --name nexus-data
  414  docker run -d -p 8081:8081 --name nexus -v nexus-data:/nexus-data sonatype/nexus3
  415  ip a
  416  netstat -tlnup | grep 8081
  417  cat /nexus-data/admin.password
  418  docker container exec nexus cat nexus-data/admin.password
  419  docker ps
  420  docker d11975bf5070 exec nexus cat nexus-data/admin.password
  421  docker sonatype/nexus3 exec nexus cat nexus-data/admin.password
  422  docker container exec sonatype/nexus3 cat nexus-data/admin.password
  423  docker container exec d11975bf5070 cat nexus-data/admin.password
  424  docker container exec nexus cat nexus-data/admin.password
  425  docker container exec nexus cat /nexus-data/admin.password
  426  systemctl status jenkins
  427  clear
  428  mkdir jenkins
  429  docker run -d --name jenkins -p 8080:8080 -v $PWD/jenkins/ jenkins/jenkins
  430  docker ps
  431  docker ps -a
  432  cd jenkins/
  433  pwd
  434  cd
  435  cd $PWD/jenkins/
  436  pwd
  437  docker images
  438   docker run -d --name jenkins -p 5000:5000 -v $PWD/jenkins/ jenkins/jenkins
  439  ll
  440  cd
  441   docker run -d --name jenkins -p 5000:5000 -v $PWD/jenkins/ jenkins/jenkins
  442  docker images rmi 892693e4fe31
  443  docker images rm -f 892693e4fe31
  444  docker rm
  445  docker rm --hrlp
  446  docker images -h
  447  docker images rm -h
  448  docker rm -f jenkins/jenkins
  449  docker rm -f 892693e4fe31
  450  docker image rmi -f 892693e4fe31
  451   docker run -d --name jenkins -p 5000:5000 -v $PWD/jenkins/ jenkins/jenkins
  452  docker-machine regenerate-certs --client-certs
  453  yum install -y docker-machine regenerate-certs --client-certs
  454  yum install docker-machine -y
  455  clear
  456  docker images
  457  docker run -p 8080:8080 -p 50000:50000 -v $PWD/jenkins:/var/jenkins_home jenkins/jenkins:lts-jdk11
  458  docker images
  459  docker image rmi -f 515092d9a2c8
  460  rm -rf jenkins/
  461  ll
  462  mkdir jenkins
  463  docker run -p 8080:8080 -p 50000:50000 -v $PWD/jenkins:/var/jenkins_home jenkins/jenkins
  464  docker images
  465  docker run -p 8080:8080 -p 50000:50000 jenkins/jenkins:lts
  466  sudo systemctl daemon-reload
  467  sudo systemctl restart docker
  468  docker run -p 8080:8080 -p 50000:50000 jenkins/jenkins:lts
  469  docker images
  470  docker image rmi -f 39353289457d
  471  sudo systemctl daemon-reload
  472  sudo systemctl restart docker
  473  rm -rf jenkins/
  474  mkdir jenkins
  475  docker run -p 8080:8080 -p 50000:50000 -v $PWD/jenkins:/var/jenkins_home jenkins/jenkins
  476  chown jenkins jenkins
  477  useradd jenkins
  478  docker images
  479  docker image rmi -f 892693e4fe31
  480  ll
  481  docker images
  482  helm
  483  clear
  484  docker pull jenkins
  485  sudo systemctl daemon-reload
  486  sudo systemctl restart docker
  487  docker pull jenkins
  488  docker pull jenkins/jenkins
  489  clear
  490  docker run -p 8080:8080 -p 50000:50000 jenkins/jenkins
  491  free -g
  492  docker images
  493  docker image rmi -f 892693e4fe31
  494  clear
  495  docker pull jenkins/jenkins
  496  docker images
  497  docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk17
  498  docker images
  499  docker image rmi -f 39353289457d
  500  docker image rmi -f c173d93335fc
  501  docker image rmi -f 39353289457d
  502  docker images
  503  docker image rmi -f jenkins/jenkins
  504  docker image rmi -f 39353289457d
  505  docker ps
  506  docker image rmi -f c173d93335fc
  507  docker stop c173d93335fc
  508  docker images
  509  yum install docker-compose -y
  510  curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  511  chmod +x /usr/local/bin/docker-compose
  512  usermod -aG docker $USER
  513  rm -rf /var/lib/sss/db
  514  usermod -aG docker $USER
  515  rm -rf /var/lib/sss/db
  516  vi docker-compose.yml
  517  docker-compose up -d
  518  docker-compose logs --follow
  519  docker images
  520  docker image rmi -f jenkins/jenkins
  521  docker image rmi -f 39353289457d
  522  clear
  523  sudo dnf install java-1.8.0-openjdk-devel
  524  [===============================================
  525  sudo wget –O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo
  526  vi /etc/yum.repos.d/jenkins.repo
  527  sudo rpm ––import https://pkg.jenkins.io/redhat/jenkins.io.key
  528  rpm ––import https://pkg.jenkins.io/redhat/jenkins.io.key
  529  sudo dnf install jenkins
  530  rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
  531  sudo dnf install jenkins -y
  532  dnf clean packages
  533  sudo dnf install jenkins -y
  534  dnfclean packages
  535  dnf clean packages
  536   dnf install jenkins
  537  history
  538  dnf remove java-1.8.0-openjdk-devel -y
  539  clear
  540  sudo dnf remove jenkins -y
  541  dnf repolist -v
  542  yum clean all
  543  clear
  544  yum -y install java*
  545  yum clean all
  546  clear
  547  sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
  548    sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
  549  yum install jenkins -y
  550  sudo systemctl enable jenkins
  551  sudo systemctl start jenkins
  552  journalctl -xe
  553   systemctl start jenkins
  554   systemctl status jenkins
  555  yum -y remove java*
  556  yum remove jenkins -y
  557  clear
  558  yum clean all
  559  wget https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.rpm
  560  update-alternatives --config java
  561  echo $JAVA_HOME
  562  java -v
  563  java -version
  564  yum install jdk-17_linux-x64_bin.rpm -y
  565  rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
  566   cd /etc/yum/repos.d/
  567  cd /etc/yum.repos.d/
  568  curl -O https://pkg.jenkins.io/redhat-stable/jenkins.repo
  569  dnf install jenkins -y
  570  java -version
  571  sudo systemctl start jenkins
  572  yum -y remove java*
  573  dnf install java-11-openjdk-devel -y
  574   systemctl starts jenkins
  575   systemctl start jenkins
  576   systemctl status jenkins
  577  history | grep docker
  578  clear
  579  c
  580  cd
  581  clear
  582  cat /var/lib/jenkins/secrets/initialAdminPassword
  583  ping google.com
  584  git
  585  ll
  586  git clone git@github.com:sibanando/Terraform.git
  587  cd Terraform/
  588  ll
  589  cd
  590  git clone git@github.com:mydevopscoach/my-tf-iac-aws-repo.git
  591  ll
  592  cd my-tf-iac-aws-repo/
  593  ll
  594  cp -rp * /root/Terraform/
  595  ll
  596  cat README.md
  597  aws configure
  598  cd
  599  history | grep aws
  600  aws sts get-caller-identity
  601  aws s3 ls
  602  clear
  603  aws configure
  604  aws sts get-caller-identity
  605  aws ec2
  606  aws --help
  607  aws ec3 help
  608  aws ec2 list
  609  aws ec2 describe-instances
  610  clear
  611  cd Terraform/
  612  ll
  613  git add .
  614  git status
  615  git commit "terraform v1"
  616  git commit "terraform-v1"
  617  git commit -m  "terraform-v1"
  618  git push
  619  vi my-d.pem
  620  chmod 400 my-d.pem
  621  aws ec2 describe-instances
  622  init 0
  623  history
  624  systemctl status jenkins
  625  systemctl start jenkins
  626  systemctl status jenkins
  627  cd Terraform/
  628  ll
  629  vi variables.tf
  630  cat main.tf
  631  vi variables.tf
  632  yum install -y yum-utils
  633  yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
  634  yum --showduplicate list terraform
  635  dnf install terraform-1.6.2-1.x86_64
  636  dnf clean packages
  637  cd /etc/yum.repos.d/
  638  ll
  639  rm -rf hashicorp.repo
  640  sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
  641  sudo yum -y install terraform
  642  terrafom
  643  terraform
  644  clear
  645  cd
  646  cd Terraform/
  647  ll
  648  history
  649  git add .
  650  git commit -m  "terraform-v1"
  651  git push
  652  clear
  653  ll
  654  terraform init
  655  terraform plan
  656  cat main.tf
  657  vi main.tf
  658  cat variables.tf
  659  cat main.tf
  660  vi variables.tf
  661  vi main.tf
  662  terraform plan
  663  vi main.tf
  664  terraform plan
  665  terraform apply
  666  vi main.tf
  667  terraform apply
  668  ll
  669  mv my-d.pem anil01.pem
  670  vi main.tf
  671  vi variables.tf
  672  history | grep aws
  673  aws ec2 describe-instances
  674  history
  675  git add .
  676  git commit -m  "terraform-v2"
  677  git push
  678  ll
  679  rm -rf terraform.tfstate*
  680  ll
  681  git add .
  682  git commit -m  "terraform-v2"
  683  git push
  684  ll
  685  git add .
  686  git commit -m  "terraform-v3"
  687  git push
  688  init 6
  689  cd Terraform/
  690  ll
  691  git push
  692  ll
  693  rm README.md
  694  git add .
  695  git commit -m  "terraform-v4"
  696  git push
  697  ls -a
  698  rm -rf .terraform*
  699  ls -a
  700  git add .
  701  git commit -m  "terraform-v5"
  702  git push
  703  rm -rf .terraform/providers/registry.terraform.io/hashicorp/aws/5.22.0/linux_amd64/terraform-provider-aws_v5.22.0_x5
  704  git add .
  705  git commit -m  "terraform-v5"
  706  git commit -m  "terraform-v6"
  707  git push
  708  cat main.tf
  709  provider "aws" {
  710  cat variables.tf
  711  variable "aws_region" {
  712    description = "The AWS region to create things in."
  713    default     = "us-east-1"
  714  }
  715  variable "key_name" {
  716    description = " SSH keys to connect to ec2 instance"
  717    default     =  "anil01"
  718  }
  719  variable "instance_type" {
  720    description = "instance type for ec2"
  721    default     =  "t2.micro"
  722  }
  723  variable "tag_name" {
  724    description = "Tag Name of for Ec2 instance"
  725    default     = "my-ec2-01"
  726  }
  727  variable "ami_id" {
  728    description = "AMI for Ubuntu Ec2 instance"
  729    default     = "ami-0fc682b2a42e57ca2"
  730  clear
  731  systemctl status jenkins
  732  systemctl start jenkins
  733  systemctl enable jenkins
  734  cd /var/lib/jenkins/workspace/terraform_ec2
  735  ll
  736  terraform destroy
  737  terraform apply
  738  terraform destroy
  739  ll
  740  cat main.tf
  741  vi main.tf
  742  terraform apply
  743  terraform show
  744  terraform destroy --auto-approve
  745  init 0
  746  git clone https://github.com/sibanando/Terraform_Module_Workspace.git
  747  cd Terraform_Module_Workspace/
  748  ll
  749  git init
  750  mkdir modules
  751  mkdir modules/ec2_instance
  752  cd modules/ec2_instance/
  753  vi main.tf
  754  cd ../..
  755  vi main.tf
  756  tree
  757  vi terraform.tfvars
  758  tree
  759  terraform workspace new dev
  760  terraform workspace new stage
  761  terraform workspace new prod
  762  tree
  763  terraform workspace select dev
  764  terraform workspace show
  765  history | grep aws
  766   aws sts get-caller-identity
  767  aws configure
  768   aws sts get-caller-identity
  769  terraform workspace show
  770  ll
  771  cat main.tf
  772  cat modules/ec2_instance/main.tf
  773  git add .
  774  git commit -m "terraform_modules_workspace-v1"
  775  git push
  776  terraform plan
  777  terraform init
  778  cat modules/ec2_instance/main.tf
  779  vi modules/ec2_instance/main.tf
  780  git push
  781  git add .
  782  git commit -m "terraform_modules_workspace-v2"
  783  git push
  784  terraform init
  785  terraform plan
  786  terraform apply --auto-approve
  787   aws sts get-caller-identity
  788  tree
  789  terraform destroy --auto-approve
  790  terraform workspace select stage
  791  ll
  792  tree
  793  terraform apply --auto-approve
  794  terraform destroy --auto-approve
  795  cd
  796  git clone https://github.com/sibanando/Terraform_s3_tfstate.git
  797  cd Terraform_s3_tfstate/
  798  ll
  799  vi backend.tf
  800  vi main.tf
  801  vi statefile_scenarios.md
  802  git add .
  803  git commit -m "backend_s3_dynamo_v1"
  804  git push
  805  cat main.tf
  806  vi  main.tf
  807  cat backend.tf
  808  vi backend.tf
  809  cat backend.tf
  810  vi  main.tf
  811  git push
  812  git add .
  813  git commit -m "backend_s3_dynamo_v2"
  814  git push
  815  ll
  816  vi backend.tf
  817  terraform init
  818  terraform plan
  819  terraform apply --auto-approve
  820  vi backend.tf
  821  terraform init
  822  ll
  823  rm -rf terraform.tfstate*
  824  ll
  825  terraform init
  826  terraform apply --auto-approve
  827  terraform destroy --auto-approve
  828  init 0
  829  clear
  830  ekct
  831  eksctl
  832  clear
  833  helm
  834  clear
  835  ll
  836  cd EKS/
  837  ll
  838  cat cluster
  839  cat cluster.yml
  840  cat cluster_fresh.yaml


